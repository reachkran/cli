<Project Sdk="Microsoft.NET.Sdk" ToolsVersion="15.0">
  <Import Project="$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildThisFileDirectory), dir.tasks))\dir.tasks" />
  <Import Project="$(RepoRoot)/build/MSBuildExtensions.targets" />

  <PropertyGroup>
    <VersionPrefix>$(CliVersionPrefix)</VersionPrefix>
    <TargetFramework>$(CliTargetFramework)</TargetFramework>
    <RuntimeFrameworkVersion>$(MicrosoftNETCoreAppPackageVersion)</RuntimeFrameworkVersion>
    <GenerateRuntimeConfigurationFiles>true</GenerateRuntimeConfigurationFiles>
    <CopyBuildOutputToPublishDirectory>false</CopyBuildOutputToPublishDirectory>
    <AssetTargetFallback>dotnet5.4</AssetTargetFallback>
    <PublishDir>$(CliOutputDirectory)</PublishDir>
    <VersionSuffix>$(BuildNumber)</VersionSuffix>
    <PackageId>Microsoft.DotNet.Cli.Runtime</PackageId>
    <NoPackageAnalysis>true</NoPackageAnalysis>
  </PropertyGroup>

  <ItemGroup>
    <ProjectReference Include="..\dotnet\dotnet.csproj" />
  </ItemGroup>

  <Target Name="GetCustomPackageFiles"
          BeforeTargets="_GetPackageFiles"
          DependsOnTargets="PublishMSBuildExtensions;PublishSdks;ChmodPublishDir">
    <ItemGroup>
      <_PackageFiles Include="@(MSBuildExtensionsContent)" BuildAction="Content" PackageCopyToOutput="true" PackageFlatten="false" PackagePath="contentFiles\any\$(CliTargetFramework)\%(MSBuildExtensionsContent.PackagePath)" />
      <_PackageFiles Include="@(SdksContent)" BuildAction="Content" PackageCopyToOutput="true" PackageFlatten="false" PackagePath="contentFiles\any\$(CliTargetFramework)\%(SdksContent.PackagePath)" />

      <_BuildOutputInPackage Remove="@(_BuildOutputInPackage)" />
    </ItemGroup>
  </Target>

  <Target Name="PublishMSBuildExtensions"
          DependsOnTargets="GenerateMSBuildExtensions"
          AfterTargets="Publish">
    <ItemGroup>
      <MSBuildExtensionsContent Update="@(MSBuildExtensionsContent)">
        <DestinationPath Condition="'%(MSBuildExtensionsContent.DestinationPath)' == ''">$(PublishDir)/%(MSBuildExtensionsContent.DeploymentSubpath)%(RecursiveDir)%(Filename)%(Extension)</DestinationPath>
        <PackagePath>%(MSBuildExtensionsContent.DeploymentSubpath)%(RecursiveDir)%(Filename)%(Extension)</PackagePath>
      </MSBuildExtensionsContent>
    </ItemGroup>

    <Copy SourceFiles="@(MSBuildExtensionsContent)"
          DestinationFiles="%(MSBuildExtensionsContent.DestinationPath)" />
  </Target>

  <Target Name="PublishSdks"
          AfterTargets="Publish">
    <ItemGroup>
      <SdksToBundle Include="$(RepoRoot)/build/RestoreDependency.proj">
        <Properties>
          CLIBuildDll=$(CLIBuildDll);
          NuGetPackagesDir=$(NuGetPackagesDir);
          SdkLayoutDirectory=$(PublishDir)/Sdks/%(BundledSdk.Identity);
          DependencyPackageName=%(BundledSdk.Identity);
          DependencyPackageVersion=%(BundledSdk.Version);
          PreviousStageDirectory=$(PreviousStageDirectory)
        </Properties>
      </SdksToBundle>
    </ItemGroup>

    <MSBuild
      BuildInParallel="False"
      Projects="@(SdksToBundle)">
    </MSBuild>

    <ItemGroup>
      <SdksContent Include="$(PublishDir)/Sdks/**/*">
        <PackagePath>Sdks/%(RecursiveDir)%(Filename)%(Extension)</PackagePath>
      </SdksContent>
    </ItemGroup>
  </Target>

  <Target Name="ChmodPublishDir"
          AfterTargets="PublishMSBuildExtensions"
          Condition=" '$(OS)' != 'Windows_NT' ">
    
    <Exec Command="find $(PublishDir) -type d -exec chmod 755 {} \;" />
    <Exec Command="find $(PublishDir) -type f -exec chmod 644 {} \;" />
  </Target>
</Project>
